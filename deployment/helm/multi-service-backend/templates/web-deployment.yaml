apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.names.deployment.web }}
  labels:
    app: {{ .Values.names.app.web }}
spec:
  replicas: {{ .Values.deploymentReplicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.names.app.web }}
  template:
    metadata:
      labels:
        app: {{ .Values.names.app.web }}
    spec:
      containers:
      - image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        resources:
          limits:
            memory: 1Gi
            cpu: 500m
          requests:
            memory: 1Gi
            cpu: 500m
        name: {{ .Values.names.app.web }}-main
        volumeMounts:
          - mountPath: "/etc/app/pfx"
            name: app-pfx-volume
            readOnly: true
        env:
        - name: CUSTOM_APPLICATION_NAME
          value: {{ .Values.names.app.web }}
        - name: ASPNETCORE_Kestrel__Certificates__Default__Path
          value: "/etc/app/pfx/backend.pfx"
        - name: ASPNETCORE_Kestrel__Certificates__Default__Password
          valueFrom:
            secretKeyRef:
              name: {{ .Values.names.secret.certPassword }}
              key: password
        - name: NAMESPACE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        ports:
        - containerPort: 443
        livenessProbe:
          httpGet:
            scheme: HTTPS
            path: /healthz
            port: 443
          periodSeconds: 5
          timeoutSeconds: 5
          initialDelaySeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            scheme: HTTPS
            path: /healthz
            port: 443
          periodSeconds: 5
          initialDelaySeconds: 5
        lifecycle:
          preStop:
            exec:
              command: ["sleep", "90"]
      volumes:
      - name: app-pfx-volume
        secret:
          secretName: {{ .Values.names.secret.certPfxFile }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}